// generated with @7nohe/openapi-react-query-codegen@1.1.0 
import { useQuery, useSuspenseQuery, useMutation, UseQueryResult, UseQueryOptions, UseMutationOptions, UseMutationResult } from "@tanstack/react-query";
import { DormitoryService, InstituteService, ReviewService, UniversityService, UniversityNewsService, UserService, DormitoryData, InstituteData, ReviewData, UniversityData, UniversityNewsData, UserData } from "../requests";
import { Dormitory, Institute, Review, University, UniversityNews, UserComment, User, ErrorResponse } from "../requests/models";
export type DormitoryServiceGetDormitoreDefaultResponse = Awaited<ReturnType<typeof DormitoryService.getDormitore>>;
export type DormitoryServiceGetDormitoreQueryResult<TData = DormitoryServiceGetDormitoreDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useDormitoryServiceGetDormitoreKey = "DormitoryServiceGetDormitore";
export type DormitoryServiceGetDormitoreByIdDefaultResponse = Awaited<ReturnType<typeof DormitoryService.getDormitoreById>>;
export type DormitoryServiceGetDormitoreByIdQueryResult<TData = DormitoryServiceGetDormitoreByIdDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useDormitoryServiceGetDormitoreByIdKey = "DormitoryServiceGetDormitoreById";
export type InstituteServiceGetInstituteDefaultResponse = Awaited<ReturnType<typeof InstituteService.getInstitute>>;
export type InstituteServiceGetInstituteQueryResult<TData = InstituteServiceGetInstituteDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useInstituteServiceGetInstituteKey = "InstituteServiceGetInstitute";
export type ReviewServiceGetReviewDefaultResponse = Awaited<ReturnType<typeof ReviewService.getReview>>;
export type ReviewServiceGetReviewQueryResult<TData = ReviewServiceGetReviewDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useReviewServiceGetReviewKey = "ReviewServiceGetReview";
export type ReviewServiceGetReviewByIdDefaultResponse = Awaited<ReturnType<typeof ReviewService.getReviewById>>;
export type ReviewServiceGetReviewByIdQueryResult<TData = ReviewServiceGetReviewByIdDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useReviewServiceGetReviewByIdKey = "ReviewServiceGetReviewById";
export type UniversityServiceGetUniversityByIdDefaultResponse = Awaited<ReturnType<typeof UniversityService.getUniversityById>>;
export type UniversityServiceGetUniversityByIdQueryResult<TData = UniversityServiceGetUniversityByIdDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useUniversityServiceGetUniversityByIdKey = "UniversityServiceGetUniversityById";
export type UniversityServiceGetUniversityDefaultResponse = Awaited<ReturnType<typeof UniversityService.getUniversity>>;
export type UniversityServiceGetUniversityQueryResult<TData = UniversityServiceGetUniversityDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useUniversityServiceGetUniversityKey = "UniversityServiceGetUniversity";
export type UniversityNewsServiceGetNewsByIdDefaultResponse = Awaited<ReturnType<typeof UniversityNewsService.getNewsById>>;
export type UniversityNewsServiceGetNewsByIdQueryResult<TData = UniversityNewsServiceGetNewsByIdDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useUniversityNewsServiceGetNewsByIdKey = "UniversityNewsServiceGetNewsById";
export type UniversityNewsServiceGetNewsDefaultResponse = Awaited<ReturnType<typeof UniversityNewsService.getNews>>;
export type UniversityNewsServiceGetNewsQueryResult<TData = UniversityNewsServiceGetNewsDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useUniversityNewsServiceGetNewsKey = "UniversityNewsServiceGetNews";
export type UserServiceGetUserByIdDefaultResponse = Awaited<ReturnType<typeof UserService.getUserById>>;
export type UserServiceGetUserByIdQueryResult<TData = UserServiceGetUserByIdDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useUserServiceGetUserByIdKey = "UserServiceGetUserById";
export type UserServiceGetUsersDefaultResponse = Awaited<ReturnType<typeof UserService.getUsers>>;
export type UserServiceGetUsersQueryResult<TData = UserServiceGetUsersDefaultResponse, TError = unknown> = UseQueryResult<TData, TError>;
export const useUserServiceGetUsersKey = "UserServiceGetUsers";
export type DormitoryServicePostAddDormMutationResult = Awaited<ReturnType<typeof DormitoryService.postAddDorm>>;
export type InstituteServicePostInstituteMutationResult = Awaited<ReturnType<typeof InstituteService.postInstitute>>;
export type ReviewServicePostReviewMutationResult = Awaited<ReturnType<typeof ReviewService.postReview>>;
export type UniversityServicePostUniversityByIdMutationResult = Awaited<ReturnType<typeof UniversityService.postUniversityById>>;
export type UniversityServicePostUniversityAddCommentByIdMutationResult = Awaited<ReturnType<typeof UniversityService.postUniversityAddCommentById>>;
export type UniversityServicePostUniversityAddUserByIdMutationResult = Awaited<ReturnType<typeof UniversityService.postUniversityAddUserById>>;
export type UniversityServicePostUniversityDeleteUserByIdMutationResult = Awaited<ReturnType<typeof UniversityService.postUniversityDeleteUserById>>;
export type UniversityNewsServicePostNewsMutationResult = Awaited<ReturnType<typeof UniversityNewsService.postNews>>;
export type UserServicePostUserMutationResult = Awaited<ReturnType<typeof UserService.postUser>>;
export type UserServicePostLoginMutationResult = Awaited<ReturnType<typeof UserService.postLogin>>;
export type UniversityServicePatchUniversityByIdMutationResult = Awaited<ReturnType<typeof UniversityService.patchUniversityById>>;
export type UniversityNewsServicePatchNewsByIdMutationResult = Awaited<ReturnType<typeof UniversityNewsService.patchNewsById>>;
export type ReviewServiceDeleteReviewByIdMutationResult = Awaited<ReturnType<typeof ReviewService.deleteReviewById>>;
export type UniversityServiceDeleteUniversityByIdMutationResult = Awaited<ReturnType<typeof UniversityService.deleteUniversityById>>;
export type UniversityNewsServiceDeleteNewsByIdMutationResult = Awaited<ReturnType<typeof UniversityNewsService.deleteNewsById>>;
